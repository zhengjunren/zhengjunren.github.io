(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{405:function(_,v,a){"use strict";a.r(v);var t=a(5),s=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"uml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[_._v("#")]),_._v(" UML")]),_._v(" "),a("h2",{attrs:{id:"uml-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-简介"}},[_._v("#")]),_._v(" UML 简介")]),_._v(" "),a("h4",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[_._v("#")]),_._v(" 特点")]),_._v(" "),a("ol",[a("li",[_._v("统一标准")]),_._v(" "),a("li",[_._v("面向对象")]),_._v(" "),a("li",[_._v("可视化")]),_._v(" "),a("li",[_._v("独立于过程")]),_._v(" "),a("li",[_._v("容易掌握使用")]),_._v(" "),a("li",[_._v("与编程语言的关系")])]),_._v(" "),a("h4",{attrs:{id:"基本模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本模型"}},[_._v("#")]),_._v(" 基本模型")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210305134102665.png",alt:"image-20210305134102665"}})]),_._v(" "),a("p",[_._v("UML 的基本模型由事物、关系和图组成。")]),_._v(" "),a("h2",{attrs:{id:"uml-中的事物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-中的事物"}},[_._v("#")]),_._v(" UML 中的事物")]),_._v(" "),a("p",[_._v("事物是对模型中最具代表性成分的抽象，在 UML 中，可以分为结构事物、行为事物、分组事物和注释事物。")]),_._v(" "),a("h4",{attrs:{id:"结构事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构事务"}},[_._v("#")]),_._v(" 结构事务")]),_._v(" "),a("ol",[a("li",[_._v("类")]),_._v(" "),a("li",[_._v("主动类")]),_._v(" "),a("li",[_._v("接口")]),_._v(" "),a("li",[_._v("对象")]),_._v(" "),a("li",[_._v("用例")]),_._v(" "),a("li",[_._v("参与者")]),_._v(" "),a("li",[_._v("协作")]),_._v(" "),a("li",[_._v("构件")]),_._v(" "),a("li",[_._v("节点")])]),_._v(" "),a("h4",{attrs:{id:"行为事物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行为事物"}},[_._v("#")]),_._v(" 行为事物")]),_._v(" "),a("p",[_._v("行为事物是 UML 模型的动态部分，包括以下两类")]),_._v(" "),a("ol",[a("li",[_._v("交互：由特定的上下文环境中共同完成一定任务的一组对象间传递的消息组成")]),_._v(" "),a("li",[_._v("状态机：描述了一个对象或一个交互在生存期内响应事件所经历的转台序列。")])]),_._v(" "),a("h4",{attrs:{id:"分组事物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组事物"}},[_._v("#")]),_._v(" 分组事物")]),_._v(" "),a("p",[_._v("包、子系统")]),_._v(" "),a("h4",{attrs:{id:"注释事物"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释事物"}},[_._v("#")]),_._v(" 注释事物")]),_._v(" "),a("p",[_._v("注释")]),_._v(" "),a("h2",{attrs:{id:"uml-的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-的关系"}},[_._v("#")]),_._v(" UML 的关系")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310164017074.png",alt:"image-20210310164017074"}})]),_._v(" "),a("h2",{attrs:{id:"uml-中的图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-中的图"}},[_._v("#")]),_._v(" UML 中的图")]),_._v(" "),a("p",[_._v("结构图用于系统的静态建模，包括类图、组合结构图、构件图、部署图、对象图、包图以及造型图")]),_._v(" "),a("p",[_._v("行为图用于对系统的动态方面建模，包括活动图、状态图、顺序图、交互概览图、通信图及顶视图。")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310165447406.png",alt:"image-20210310165447406"}})]),_._v(" "),a("h3",{attrs:{id:"用例图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例图"}},[_._v("#")]),_._v(" 用例图")]),_._v(" "),a("p",[_._v("用例模型描述的是外部执行者所理解的系统功能。用例模型用于需求分析阶段，它的建立是系统开发者和用户反复讨论的结果，描述了开发者和用户对需求规格达成的共识。")]),_._v(" "),a("p",[_._v("在 UML 中，一个用例模型由若干个用例图来描述，用例图的主要元素是"),a("strong",[_._v("用例和执行者")])]),_._v(" "),a("p",[_._v("用例图是包括执行者、由系统边界封闭的一组用例、执行者和用例之间的关联、用例之间的关系以及执行者之间泛化的图")]),_._v(" "),a("p",[_._v("用例之间的关系：泛化、拓展、包含（使用）")]),_._v(" "),a("ul",[a("li",[_._v("泛化：用例泛化是指一个用例可以被特别列举为一个多个子用例")]),_._v(" "),a("li",[_._v("包含（使用）：\n"),a("ul",[a("li",[_._v("一个用例所执行的功能总是包括被包含用例的功能，如取款功能总是包括输入取款信息、检查余额、验证密码以及计算利息功能。")])])]),_._v(" "),a("li",[_._v("扩展关系\n"),a("ul",[a("li",[_._v("是指一个用例的执行可能需要由其他用例的功能来扩展，如取款用例需要扩展到打印利息清单用例，打印利息清单称为扩展利用，取款称为基本用例。")])])])]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310190529085.png",alt:"image-20210310190529085"}})]),_._v(" "),a("h3",{attrs:{id:"类图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[_._v("#")]),_._v(" 类图")]),_._v(" "),a("p",[_._v("类图描述类和类之间的静态关系，它是从静态角度表示系统的，因此类图属于一种静态模型，类图是构建其他图的基础，没有类图就没有状态图、协作图等其他图，也就无法表示系统其他方面的特性。")]),_._v(" "),a("p",[_._v("类图显示了子类，类的内部结构以及与其他类的联系，联系是指类之家的联系，在类的建模中可以使用关联、聚合、和泛化关系")]),_._v(" "),a("p",[_._v("组成元素：类、接口、关系")]),_._v(" "),a("h3",{attrs:{id:"交互图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互图"}},[_._v("#")]),_._v(" 交互图")]),_._v(" "),a("p",[_._v("UML 中有两种类型的交互图：顺序图和协作图")]),_._v(" "),a("p",[_._v("顺序图描述对象之间的动态交互关系，着重表现对象间消息传递的时间顺序")]),_._v(" "),a("p",[_._v("通信图是顺序图的一种变化形式，用于描述相互协作的对象间交互关系和链接关系。")]),_._v(" "),a("p",[_._v("协作图又称为通信图")]),_._v(" "),a("p",[_._v("顺序图又称为时序图")]),_._v(" "),a("p",[_._v("顺序图的组成元素：对象、生命线、激活、消息")]),_._v(" "),a("p",[_._v("协作图的组成元素：对象、链、消息")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310194105346.png",alt:"image-20210310194105346"}})]),_._v(" "),a("p",[_._v("虽然顺序图和通信图都描述对象间的交互关系，但它们的侧重点不同：顺序图注重表现交互的时间顺序，通信图则着重表现交互对象的静态链接关系")]),_._v(" "),a("h3",{attrs:{id:"状态图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态图"}},[_._v("#")]),_._v(" 状态图")]),_._v(" "),a("p",[_._v("状态图描述一个特定对象所有可能的状态以及引起状态转换的事件，大多数面向对象技术都用状态图表示单个对象在其生命期中的行为。一个状态图包括一系列状态、事件以及状态之间的转移。")]),_._v(" "),a("p",[_._v("状态图的组成：简单状态、转换、伪状态；")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310201119753.png",alt:"image-20210310201119753"}})]),_._v(" "),a("h3",{attrs:{id:"活动图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#活动图"}},[_._v("#")]),_._v(" 活动图")]),_._v(" "),a("p",[_._v("活动图用来捕捉用例的活动，使用框图的方式显示动作及其成果")]),_._v(" "),a("p",[_._v("活动图是一个流图，描述了从活动到活动的流")]),_._v(" "),a("p",[_._v("它是一种描述交互的方式，它描述采取何种动作，动作的结果是什么、何时发生、以及在何处发生")]),_._v(" "),a("p",[_._v("活动图由起始状态、终止状态、动作、状态转移、决策、守护条件、同步棒、泳道")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310195621072.png",alt:"image-20210310195621072"}})]),_._v(" "),a("h3",{attrs:{id:"构件图和部署图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构件图和部署图"}},[_._v("#")]),_._v(" 构件图和部署图")]),_._v(" "),a("p",[_._v("系统架构分为逻辑架构和物理架构两大类。")]),_._v(" "),a("p",[_._v("逻辑架构完整地描述系统的功能，把功能分配到系统的各个部分，详细说明他们是如何工作的，物理架构详细地描述系统的软件和硬件，描述软、硬件的分解。")]),_._v(" "),a("h4",{attrs:{id:"构件图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构件图"}},[_._v("#")]),_._v(" 构件图")]),_._v(" "),a("p",[_._v("构件图描述软件构件以及构件之间的依赖关系，显示代码的静态结构")]),_._v(" "),a("p",[_._v("构件是逻辑结构中定义的概念和功能，在物理架构中的实现，典型情况下，构件是开发环境中是实现文件")]),_._v(" "),a("p",[a("img",{attrs:{src:"/soft_engineering/image-20210310200907743.png",alt:"image-20210310200907743"}})]),_._v(" "),a("h4",{attrs:{id:"部署图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署图"}},[_._v("#")]),_._v(" 部署图")]),_._v(" "),a("p",[_._v("部署图描述处理器、设备和连接，它显示系统硬件的物理拓扑结构以及在此结构上执行的软件")]),_._v(" "),a("p",[_._v("部署图可以显示计算节点的拓扑结构和通信路径、节点运行的软件以及软件包含的逻辑单元")])])}),[],!1,null,null,null);v.default=s.exports}}]);