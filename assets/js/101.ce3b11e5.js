(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{596:function(a,s,t){"use strict";t.r(s);var e=t(7),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("blockquote",[t("p",[a._v("Git常用命令集合，Fork于"),t("a",{attrs:{href:"https://github.com/git-tips/tips",target:"_blank",rel:"noopener noreferrer"}},[a._v("tips"),t("OutboundLink")],1),a._v("项目")])]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[a._v("备注")]),t("p",[a._v("转载文章，"),t("a",{attrs:{href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"}},[a._v("文章地址"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[t("code",[a._v("<>")]),a._v("是必填项，"),t("code",[a._v("[]")]),a._v("是选填项。")])]),t("p",[a._v("Git是一个 “分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过 “回撤” 这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用 “回撤” 是找不回来的。而 “版本管理工具” 能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。")]),a._v(" "),t("p",[a._v('下面的内容就是列举了常用的 Git 命令和一些小技巧，可以通过 "页面内查找" 的方式进行快速查询：'),t("code",[a._v("Ctrl/Command+f")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"开卷必读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开卷必读"}},[a._v("#")]),a._v(" 开卷必读")]),a._v(" "),t("p",[t("em",[a._v("如果之前未使用过 Git，可以学习 "),t("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 小白教程"),t("OutboundLink")],1),a._v("入门")])]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("一定要先测试命令的效果后")]),a._v("，再用于工作环境中，以防造成不能弥补的后果！"),t("strong",[a._v("到时候别拿着砍刀来找我")])]),a._v(" "),t("li",[a._v("所有的命令都在"),t("code",[a._v("git version 2.7.4 (Apple Git-66)")]),a._v("下测试通过")]),a._v(" "),t("li",[a._v("统一概念：\n"),t("ul",[t("li",[a._v("工作区：改动（增删文件和内容）")]),a._v(" "),t("li",[a._v("暂存区：输入命令："),t("code",[a._v("git add 改动的文件名")]),a._v("，此次改动就放到了 ‘暂存区’")]),a._v(" "),t("li",[a._v("本地仓库(简称：本地)：输入命令："),t("code",[a._v("git commit 此次修改的描述")]),a._v("，此次改动就放到了 ’本地仓库’，每个 commit，我叫它为一个 ‘版本’。")]),a._v(" "),t("li",[a._v("远程仓库(简称：远程)：输入命令："),t("code",[a._v("git push 远程仓库")]),a._v("，此次改动就放到了 ‘远程仓库’（GitHub 等)")]),a._v(" "),t("li",[a._v("commit-id：输出命令："),t("code",[a._v("git log")]),a._v("，最上面那行 "),t("code",[a._v("commit xxxxxx")]),a._v("，后面的字符串就是 commit-id")])])]),a._v(" "),t("li",[a._v("如果喜欢这个项目，欢迎 Star、提交 Pr、"),t("a",{attrs:{href:"https://github.com/521xueweihan/git-tips/issues",target:"_blank",rel:"noopener noreferrer"}},[a._v("反馈问题"),t("OutboundLink")],1),a._v("😊")])]),a._v(" "),t("h2",{attrs:{id:"展示帮助信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示帮助信息"}},[a._v("#")]),a._v(" 展示帮助信息")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" -g\n")])])]),t("p",[a._v("The command output as below:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("The common Git guides are:\n   attributes          Defining attributes per path\n   cli                 Git command-line interface and conventions\n   core-tutorial       A Git core tutorial for developers\n   cvs-migration       Git for CVS users\n   diffcore            Tweaking diff output\n   everyday            A useful minimum set of commands for Everyday Git\n   glossary            A Git Glossary\n   hooks               Hooks used by Git\n   ignore              Specifies intentionally untracked files to ignore\n   modules             Defining submodule properties\n   namespaces          Git namespaces\n   repository-layout    Git Repository Layout\n   revisions           Specifying revisions and ranges for Git\n   tutorial            A tutorial introduction to Git\n   tutorial-2          A tutorial introduction to Git: part two\n   workflows           An overview of recommended workflows with Git\n\n'git help -a' and 'git help -g' list available subcommands and some concept guides. See 'git help <command>' or 'git help <concept>' to read about a specific subcommand or concept.\n")])])]),t("h2",{attrs:{id:"回到远程仓库的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到远程仓库的状态"}},[a._v("#")]),a._v(" 回到远程仓库的状态")]),a._v(" "),t("p",[a._v("抛弃本地所有的修改，回到远程仓库的状态。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch --all "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard origin/master\n")])])]),t("h2",{attrs:{id:"重设第一个-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重设第一个-commit"}},[a._v("#")]),a._v(" 重设第一个 commit")]),a._v(" "),t("p",[a._v("也就是把所有的改动都重新放回工作区，并"),t("strong",[a._v("清空所有的 commit")]),a._v("，这样就可以重新提交第一个 commit 了")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-ref -d HEAD\n")])])]),t("h2",{attrs:{id:"展示工作区和暂存区的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示工作区和暂存区的不同"}},[a._v("#")]),a._v(" 展示工作区和暂存区的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("工作区")]),a._v("和"),t("strong",[a._v("暂存区")]),a._v("的 different (不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v("\n")])])]),t("p",[a._v("还可以展示本地仓库中任意两个 commit 之间的文件变动：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示暂存区和最近版本的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区和最近版本的不同"}},[a._v("#")]),a._v(" 展示暂存区和最近版本的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("暂存区")]),a._v("和本地最近的版本 (commit) 的 different (不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --cached\n")])])]),t("h2",{attrs:{id:"展示暂存区、工作区和最近版本的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区、工作区和最近版本的不同"}},[a._v("#")]),a._v(" 展示暂存区、工作区和最近版本的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("工作区")]),a._v("、"),t("strong",[a._v("暂存区")]),a._v(" 和本地最近的版本 (commit) 的 different (不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" HEAD\n")])])]),t("h2",{attrs:{id:"快速切换到上一个分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速切换到上一个分支"}},[a._v("#")]),a._v(" 快速切换到上一个分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -\n")])])]),t("h2",{attrs:{id:"删除已经合并到-master-的分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除已经合并到-master-的分支"}},[a._v("#")]),a._v(" 删除已经合并到 master 的分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --merged master "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^\\*\\|  master'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d\n")])])]),t("h2",{attrs:{id:"展示本地分支关联远程仓库的情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示本地分支关联远程仓库的情况"}},[a._v("#")]),a._v(" 展示本地分支关联远程仓库的情况")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -vv\n")])])]),t("h2",{attrs:{id:"关联远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支"}},[a._v("#")]),a._v(" 关联远程分支")]),a._v(" "),t("p",[a._v("关联之后，"),t("code",[a._v("git branch -vv")]),a._v(" 就可以展示关联的远程分支名了，同时推送到远程仓库直接："),t("code",[a._v("git push")]),a._v("，不需要指定远程仓库了。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -u origin/mybranch\n")])])]),t("p",[a._v("或者在 push 时加上 "),t("code",[a._v("-u")]),a._v(" 参数")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin/mybranch -u\n")])])]),t("h2",{attrs:{id:"列出所有远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程分支"}},[a._v("#")]),a._v(" 列出所有远程分支")]),a._v(" "),t("p",[a._v("-r 参数相当于：remote")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -r\n")])])]),t("h2",{attrs:{id:"列出本地和远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出本地和远程分支"}},[a._v("#")]),a._v(" 列出本地和远程分支")]),a._v(" "),t("p",[a._v("-a 参数相当于：all")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -a\n")])])]),t("h2",{attrs:{id:"查看远程分支和本地分支的对应关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看远程分支和本地分支的对应关系"}},[a._v("#")]),a._v(" 查看远程分支和本地分支的对应关系")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote show origin\n")])])]),t("h2",{attrs:{id:"远程删除了分支本地也想删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程删除了分支本地也想删除"}},[a._v("#")]),a._v(" 远程删除了分支本地也想删除")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote prune origin\n")])])]),t("h2",{attrs:{id:"创建并切换到本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到本地分支"}},[a._v("#")]),a._v(" 创建并切换到本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"从远程分支中创建并切换到本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从远程分支中创建并切换到本地分支"}},[a._v("#")]),a._v(" 从远程分支中创建并切换到本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" origin/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支"}},[a._v("#")]),a._v(" 删除本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --delete "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("或者")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"重命名本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重命名本地分支"}},[a._v("#")]),a._v(" 重命名本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -m "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new-branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"查看标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看标签"}},[a._v("#")]),a._v(" 查看标签")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag\n")])])]),t("p",[a._v("展示当前分支的最近的 tag")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" describe --tags --abbrev"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),t("h2",{attrs:{id:"查看标签详细信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看标签详细信息"}},[a._v("#")]),a._v(" 查看标签详细信息")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -ln\n")])])]),t("h2",{attrs:{id:"本地创建标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地创建标签"}},[a._v("#")]),a._v(" 本地创建标签")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"v1.0 发布(描述)"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"推送标签到远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推送标签到远程仓库"}},[a._v("#")]),a._v(" 推送标签到远程仓库")]),a._v(" "),t("p",[a._v("首先要保证本地创建好了标签才可以推送标签到远程仓库：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("一次性推送所有标签，同步到远程仓库：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --tags\n")])])]),t("h2",{attrs:{id:"删除本地标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除本地标签"}},[a._v("#")]),a._v(" 删除本地标签")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除远程标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程标签"}},[a._v("#")]),a._v(" 删除远程标签")]),a._v(" "),t("p",[a._v("删除远程标签需要"),t("strong",[a._v("先删除本地标签")]),a._v("，再执行下面的命令：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :refs/tags/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"切回到某个标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切回到某个标签"}},[a._v("#")]),a._v(" 切回到某个标签")]),a._v(" "),t("p",[a._v("一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b branch_name tag_name\n")])])]),t("h2",{attrs:{id:"放弃工作区的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#放弃工作区的修改"}},[a._v("#")]),a._v(" 放弃工作区的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("放弃所有修改：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h2",{attrs:{id:"恢复删除的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#恢复删除的文件"}},[a._v("#")]),a._v(" 恢复删除的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rev-list -n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" HEAD -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#得到 deleting_commit")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("deleting_commit"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("^ -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回到删除文件 deleting_commit 之前的状态")]),a._v("\n")])])]),t("h2",{attrs:{id:"以新增一个-commit-的方式还原某一个-commit-的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以新增一个-commit-的方式还原某一个-commit-的修改"}},[a._v("#")]),a._v(" 以新增一个 commit 的方式还原某一个 commit 的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" revert "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"回到某个-commit-的状态-并删除后面的-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-commit-的状态-并删除后面的-commit"}},[a._v("#")]),a._v(" 回到某个 commit 的状态，并删除后面的 commit")]),a._v(" "),t("p",[a._v("和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#默认就是-mixed参数。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –mixed HEAD^  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –soft HEAD~3  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  ")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –hard "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容")]),a._v("\n")])])]),t("h2",{attrs:{id:"修改上一个-commit-的描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改上一个-commit-的描述"}},[a._v("#")]),a._v(" 修改上一个 commit 的描述")]),a._v(" "),t("p",[a._v("如果暂存区有改动，同时也会将暂存区的改动提交到上一个 commit")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n")])])]),t("h2",{attrs:{id:"查看-commit-历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看-commit-历史"}},[a._v("#")]),a._v(" 查看 commit 历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n")])])]),t("h2",{attrs:{id:"查看某段代码是谁写的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看某段代码是谁写的"}},[a._v("#")]),a._v(" 查看某段代码是谁写的")]),a._v(" "),t("p",[a._v("blame 的意思为‘责怪’，你懂的。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" blame "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"显示本地更新过-head-的-git-命令记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#显示本地更新过-head-的-git-命令记录"}},[a._v("#")]),a._v(" 显示本地更新过 HEAD 的 git 命令记录")]),a._v(" "),t("p",[a._v("每次更新了 HEAD 的 git 命令比如 commint、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。\n这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reflog\n")])])]),t("h2",{attrs:{id:"修改作者名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改作者名"}},[a._v("#")]),a._v(" 修改作者名")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend --author"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Author Name <email@address.com>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"修改远程仓库的-url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库的-url"}},[a._v("#")]),a._v(" 修改远程仓库的 url")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("URL"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"增加远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加远程仓库"}},[a._v("#")]),a._v(" 增加远程仓库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"列出所有远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程仓库"}},[a._v("#")]),a._v(" 列出所有远程仓库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote\n")])])]),t("h2",{attrs:{id:"查看两个星期内的改动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看两个星期内的改动"}},[a._v("#")]),a._v(" 查看两个星期内的改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" whatchanged --since"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2 weeks ago'")]),a._v("\n")])])]),t("h2",{attrs:{id:"把-a-分支的某一个-commit-放到-b-分支上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把-a-分支的某一个-commit-放到-b-分支上"}},[a._v("#")]),a._v(" 把 A 分支的某一个 commit，放到 B 分支上")]),a._v(" "),t("p",[a._v("这个过程需要 "),t("code",[a._v("cherry-pick")]),a._v(" 命令，"),t("a",{attrs:{href:"http://sg552.iteye.com/blog/1300713#bc2367928",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry-pick "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"给-git-命令起别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给-git-命令起别名"}},[a._v("#")]),a._v(" 给 git 命令起别名")]),a._v(" "),t("p",[a._v("简化命令")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias."),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("handle"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n比如：git status 改成 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" st，这样可以简化命令\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.st status\n")])])]),t("h2",{attrs:{id:"存储当前的修改-但不用提交-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储当前的修改-但不用提交-commit"}},[a._v("#")]),a._v(" 存储当前的修改，但不用提交 commit")]),a._v(" "),t("p",[a._v("详解可以参考"),t("a",{attrs:{href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000",target:"_blank",rel:"noopener noreferrer"}},[a._v("廖雪峰老师的 git 教程"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n")])])]),t("h2",{attrs:{id:"保存当前状态-包括-untracked-的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保存当前状态-包括-untracked-的文件"}},[a._v("#")]),a._v(" 保存当前状态，包括 untracked 的文件")]),a._v(" "),t("p",[a._v("untracked 文件：新建的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash -u\n")])])]),t("h2",{attrs:{id:"展示所有-stashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-stashes"}},[a._v("#")]),a._v(" 展示所有 stashes")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list\n")])])]),t("h2",{attrs:{id:"回到某个-stash-的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-stash-的状态"}},[a._v("#")]),a._v(" 回到某个 stash 的状态")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash apply "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"回到最后一个-stash-的状态-并删除这个-stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到最后一个-stash-的状态-并删除这个-stash"}},[a._v("#")]),a._v(" 回到最后一个 stash 的状态，并删除这个 stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])]),t("h2",{attrs:{id:"删除所有的-stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除所有的-stash"}},[a._v("#")]),a._v(" 删除所有的 stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),a._v("\n")])])]),t("h2",{attrs:{id:"从-stash-中拿出某个文件的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从-stash-中拿出某个文件的修改"}},[a._v("#")]),a._v(" 从 stash 中拿出某个文件的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示所有-tracked-的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-tracked-的文件"}},[a._v("#")]),a._v(" 展示所有 tracked 的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files -t\n")])])]),t("h2",{attrs:{id:"展示所有-untracked-的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-untracked-的文件"}},[a._v("#")]),a._v(" 展示所有 untracked 的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others\n")])])]),t("h2",{attrs:{id:"展示所有忽略的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有忽略的文件"}},[a._v("#")]),a._v(" 展示所有忽略的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others -i --exclude-standard\n")])])]),t("h2",{attrs:{id:"强制删除-untracked-的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的文件"}},[a._v("#")]),a._v(" 强制删除 untracked 的文件")]),a._v(" "),t("p",[a._v("可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。"),t("code",[a._v("clean")]),a._v(" 命令，"),t("strong",[a._v("注意两点")]),a._v("：")]),a._v(" "),t("ol",[t("li",[a._v("clean 后，删除的文件无法找回")]),a._v(" "),t("li",[a._v("不会影响 tracked 的文件的改动，只会删除 untracked 的文件")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -f\n")])])]),t("h2",{attrs:{id:"强制删除-untracked-的目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的目录"}},[a._v("#")]),a._v(" 强制删除 untracked 的目录")]),a._v(" "),t("p",[a._v("可以用来删除新建的目录，"),t("strong",[a._v("注意")]),a._v(":这个命令也可以用来删除 untracked 的文件。详情见上一条")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("directory-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -df\n")])])]),t("h2",{attrs:{id:"展示简化的-commit-历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示简化的-commit-历史"}},[a._v("#")]),a._v(" 展示简化的 commit 历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("oneline --graph --decorate --all\n")])])]),t("h2",{attrs:{id:"把某一个分支到导出成一个文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把某一个分支到导出成一个文件"}},[a._v("#")]),a._v(" 把某一个分支到导出成一个文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" bundle create "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"从包中导入分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从包中导入分支"}},[a._v("#")]),a._v(" 从包中导入分支")]),a._v(" "),t("p",[a._v("新建一个分支，分支内容就是上面 "),t("code",[a._v("git bundle create")]),a._v(" 命令导出的内容")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone repo.bundle "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repo-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"执行-rebase-之前自动-stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行-rebase-之前自动-stash"}},[a._v("#")]),a._v(" 执行 rebase 之前自动 stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase --autostash\n")])])]),t("h2",{attrs:{id:"从远程仓库根据-id-拉下某一状态-到本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从远程仓库根据-id-拉下某一状态-到本地分支"}},[a._v("#")]),a._v(" 从远程仓库根据 ID，拉下某一状态，到本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch origin pull/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/head:"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"详细展示一行中的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细展示一行中的修改"}},[a._v("#")]),a._v(" 详细展示一行中的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --word-diff\n")])])]),t("h2",{attrs:{id:"清除-gitignore-文件中记录的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除-gitignore-文件中记录的文件"}},[a._v("#")]),a._v(" 清除 gitignore 文件中记录的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean -X -f\n")])])]),t("h2",{attrs:{id:"展示所有-alias-和-configs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-alias-和-configs"}},[a._v("#")]),a._v(" 展示所有 alias 和 configs")]),a._v(" "),t("p",[t("strong",[a._v("注意：")]),a._v(" config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --local --list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("当前目录"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("全局"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示忽略的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示忽略的文件"}},[a._v("#")]),a._v(" 展示忽略的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status --ignored\n")])])]),t("h2",{attrs:{id:"commit-历史中显示-branch1-有的-但是-branch2-没有-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit-历史中显示-branch1-有的-但是-branch2-没有-commit"}},[a._v("#")]),a._v(" commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log Branch1 ^Branch2\n")])])]),t("h2",{attrs:{id:"在-commit-log-中显示-gpg-签名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中显示-gpg-签名"}},[a._v("#")]),a._v(" 在 commit log 中显示 GPG 签名")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --show-signature\n")])])]),t("h2",{attrs:{id:"删除全局设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除全局设置"}},[a._v("#")]),a._v(" 删除全局设置")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --unset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("entry-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"新建并切换到新分支上-同时这个分支没有任何-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建并切换到新分支上-同时这个分支没有任何-commit"}},[a._v("#")]),a._v(" 新建并切换到新分支上，同时这个分支没有任何 commit")]),a._v(" "),t("p",[a._v("相当于保存修改，但是重写 commit 历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout --orphan "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示任意分支某一文件的内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示任意分支某一文件的内容"}},[a._v("#")]),a._v(" 展示任意分支某一文件的内容")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" show "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"clone-下来指定的单一分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone-下来指定的单一分支"}},[a._v("#")]),a._v(" clone 下来指定的单一分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --single-branch https://github.com/user/repo.git\n")])])]),t("h2",{attrs:{id:"clone-最新一次提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone-最新一次提交"}},[a._v("#")]),a._v(" clone 最新一次提交")]),a._v(" "),t("p",[a._v("只会 clone 最近一次提交，将减少 clone 时间")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone --depth"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" https://github.com/user/repo.git\n")])])]),t("h2",{attrs:{id:"忽略某个文件的改动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略某个文件的改动"}},[a._v("#")]),a._v(" 忽略某个文件的改动")]),a._v(" "),t("p",[a._v("关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-index --assume-unchanged path/to/file\n")])])]),t("p",[a._v("恢复 track 指定文件的改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-index --no-assume-unchanged path/to/file\n")])])]),t("h2",{attrs:{id:"忽略文件的权限变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件的权限变化"}},[a._v("#")]),a._v(" 忽略文件的权限变化")]),a._v(" "),t("p",[a._v("不再将文件的权限变化视作改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config core.fileMode "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),t("h2",{attrs:{id:"以最后提交的顺序列出所有-git-分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以最后提交的顺序列出所有-git-分支"}},[a._v("#")]),a._v(" 以最后提交的顺序列出所有 Git 分支")]),a._v(" "),t("p",[a._v("最新的放在最上面")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" for-each-ref --sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-committerdate --format"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%(refname:short)'")]),a._v(" refs/heads/\n")])])]),t("h2",{attrs:{id:"在-commit-log-中查找相关内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中查找相关内容"}},[a._v("#")]),a._v(" 在 commit log 中查找相关内容")]),a._v(" "),t("p",[a._v("通过 grep 查找，given-text：所需要查找的字段")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --all --grep"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<given-text>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"把暂存区的指定-file-放到工作区中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把暂存区的指定-file-放到工作区中"}},[a._v("#")]),a._v(" 把暂存区的指定 file 放到工作区中")]),a._v(" "),t("p",[a._v("不添加参数，默认是 "),t("code",[a._v("-mixed")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"强制推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制推送"}},[a._v("#")]),a._v(" 强制推送")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"git-配置-http-和-socks-代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-配置-http-和-socks-代理"}},[a._v("#")]),a._v(" git 配置 http 和 socks 代理")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global https.proxy "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://127.0.0.1:8001'")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global http.proxy "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://127.0.0.1:8001'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global socks.proxy "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:1080"')]),a._v("\n")])])]),t("h2",{attrs:{id:"git-配置-ssh-代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-配置-ssh-代理"}},[a._v("#")]),a._v(" git 配置 ssh 代理")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" ~/.ssh/config\nHost gitlab.com\nProxyCommand "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nc")]),a._v(" -X "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1:1080 %h %p    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 直接使用 shadowsocks 提供的 socks5 代理端口")]),a._v("\n\nHost github.com\nProxyCommand "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nc")]),a._v(" -X "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1:1080 %h %p    \n")])])]),t("h2",{attrs:{id:"一图详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一图详解"}},[a._v("#")]),a._v(" 一图详解")]),a._v(" "),t("p",[t("img",{attrs:{src:"/git/git.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"优雅的提交commit信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优雅的提交commit信息"}},[a._v("#")]),a._v(" 优雅的提交Commit信息")]),a._v(" "),t("p",[a._v("使用"),t("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"}},[a._v("Angular团队提交规范"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("主要有以下组成")]),a._v(" "),t("ul",[t("li",[a._v("标题行: 必填, 描述主要修改类型和内容")]),a._v(" "),t("li",[a._v("主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等")]),a._v(" "),t("li",[a._v("页脚注释: 放 Breaking Changes 或 Closed Issues")])]),a._v(" "),t("p",[a._v("常用的修改项")]),a._v(" "),t("ul",[t("li",[a._v("type: commit 的类型")]),a._v(" "),t("li",[a._v("feat: 新特性")]),a._v(" "),t("li",[a._v("fix: 修改问题")]),a._v(" "),t("li",[a._v("refactor: 代码重构")]),a._v(" "),t("li",[a._v("docs: 文档修改")]),a._v(" "),t("li",[a._v("style: 代码格式修改, 注意不是 css 修改")]),a._v(" "),t("li",[a._v("test: 测试用例修改")]),a._v(" "),t("li",[a._v("chore: 其他修改, 比如构建流程, 依赖管理.")]),a._v(" "),t("li",[a._v("scope: commit 影响的范围, 比如: route, component, utils, build...")]),a._v(" "),t("li",[a._v("subject: commit 的概述")]),a._v(" "),t("li",[a._v("body: commit 具体修改内容, 可以分为多行")]),a._v(" "),t("li",[a._v("footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接.")])]),a._v(" "),t("h3",{attrs:{id:"使用commitizen代替-git-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用commitizen代替-git-commit"}},[a._v("#")]),a._v(" 使用"),t("code",[a._v("Commitizen")]),a._v("代替 git commit")]),a._v(" "),t("p",[a._v("可以使用"),t("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[a._v("cz-cli"),t("OutboundLink")],1),a._v("工具代替 "),t("code",[a._v("git commit")])]),a._v(" "),t("p",[a._v("全局安装")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -g commitizen cz-conventional-changelog\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{ "path": "cz-conventional-changelog" }\'')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" ~/.czrc\n")])])]),t("p",[a._v("全局安装后使用 "),t("code",[a._v("git cz")]),a._v(" 代替 "),t("code",[a._v("git commit")]),a._v("就可以了,如下图")]),a._v(" "),t("p",[t("img",{attrs:{src:"/git/gitcz.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);