(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{784:function(v,_,l){"use strict";l.r(_);var t=l(7),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"选择题"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#选择题"}},[v._v("#")]),v._v(" 选择题")]),v._v(" "),l("ol",{attrs:{start:"5"}},[l("li",[v._v("一般而言，软件开发生命周期各个阶段，工作量所占比例最大的阶段是（D）")])]),v._v(" "),l("p",[v._v("A. 需求分析与设计阶段")]),v._v(" "),l("p",[v._v("B. 编码实现阶段")]),v._v(" "),l("p",[v._v("C. 测试阶段")]),v._v(" "),l("p",[v._v("D. 维护阶段")]),v._v(" "),l("p",[v._v("解：软件维护活动花费的工作占整个生存期工作量的 70％以上，这是由于在漫长的软件运行过程汇需要不断对软件进行修改，以使其进一步完善、改正新发现的错误、适应新的环境和用户新的要求，这些修改需要花费很多经历和时间，而且有时修改不正确，还会引入新的错误。同时软件维护技术不像开发技术那么成熟、规范化、自然消耗工作量就比较多。")]),v._v(" "),l("ol",{attrs:{start:"11"}},[l("li",[v._v("状态图两个状态之间带箭头的连线称为（A）")])]),v._v(" "),l("p",[v._v("A. 状态转换")]),v._v(" "),l("p",[v._v("B. 状态")]),v._v(" "),l("p",[v._v("C. 事件")]),v._v(" "),l("p",[v._v("D. 守卫")]),v._v(" "),l("ol",{attrs:{start:"15"}},[l("li",[v._v("负责用例实现的类称为（B)")])]),v._v(" "),l("p",[v._v("A. 实体类")]),v._v(" "),l("p",[v._v("B. 控制类")]),v._v(" "),l("p",[v._v("C. 关联类")]),v._v(" "),l("p",[v._v("D. 界面类")]),v._v(" "),l("p",[v._v("解：")]),v._v(" "),l("ul",[l("li",[v._v("实体类表示系统将跟踪的持久信息")]),v._v(" "),l("li",[v._v("边界类表示参与者之间的交互")]),v._v(" "),l("li",[v._v("控制类负责用例的实现")])]),v._v(" "),l("ol",{attrs:{start:"16"}},[l("li",[v._v("以下属于软件生存期过程标准中软件特有过程的是（D）")])]),v._v(" "),l("p",[v._v("A. 软件实现过程")]),v._v(" "),l("p",[v._v("B. 软件支持过程")]),v._v(" "),l("p",[v._v("C. 软件复用过程")]),v._v(" "),l("p",[v._v("D. 以上都是")]),v._v(" "),l("h2",{attrs:{id:"简答题"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#简答题"}},[v._v("#")]),v._v(" 简答题")]),v._v(" "),l("ol",[l("li",[v._v("请简述软件风险管理活动中的主要内容\n"),l("ul",[l("li",[v._v("软件风险管理活动围绕着"),l("strong",[v._v("风险评估和风险控制")]),v._v("开展。")]),v._v(" "),l("li",[l("strong",[v._v("风险评估通常包括风险识别、风险分析和风险管理 3 个方面的内容")]),v._v("。风险识别是风险评估的第一步，检查单是识别风险的有力工具；风险分析的任务是分析每个风险可能造成的影响，给出风险大小的量值；其次，我们必须对风险加以区别，以便把管理者的目光集中到最高风险的事件上。")]),v._v(" "),l("li",[l("strong",[v._v("风险控制包括风险管理策划、风险化解、和风险监控")]),v._v("。风险管理策划是要针对每个已经过识别和分析认为应该受控的风险指定风险管理计划；风险化解是要实际消除风险或减轻风险。其次我们不应把项目看成是静止不动的，必须定期对风险进行重新评估。")])])]),v._v(" "),l("li",[v._v("简述 UML 通信图中的组成元素和作用\n"),l("ul",[l("li",[v._v("UML 通信图中的组成元素为：对象、链接、消息")]),v._v(" "),l("li",[v._v("对象：表示一个类的实例")]),v._v(" "),l("li",[v._v("链接：用来在通信图中关联对象，目的是让消息在不同系统对象之间传递")]),v._v(" "),l("li",[v._v("消息：是通信图中对象与对象之家通信的方式，可分为简单消息、异步消息、同步消息和反身消息")])])]),v._v(" "),l("li",[v._v("请简要介绍软件生存期模型的内涵\n"),l("ul",[l("li",[v._v("软件生存模型也称为软件过程模型，是从软件项目需求定义直到软件运行维护为止，跨越整个生命周期的系统开发、运行和维护所试试的全部过程、活动和任务的结构框架。到目前为止，已经提出了多种软件生存期模型，典型的包括瀑布模型、原型模型、增量模型、螺旋模型、统一过程、敏捷过程")])])]),v._v(" "),l("li",[v._v("请简要描述统一过程模型的主要内容\n"),l("ul",[l("li",[v._v("统一过程是一种现代的软件开发过程模型，它把复杂系统构造为一组相互联系的功能块，小的功能块相连形成更大的功能块以构造出完整的系统。尽管对于只触及到系统的部分的任何成员来说，整个系统是不可理喻的，但是当系统被分为更小的组件时，人们可以理解每个组件提供的服务以及这些组件时如何协调工作的。或者可以说，系统被划分为具有较大功能的子系统，每个子系统又由具有更小的功能块所实现。统一过程模型是一种以用例和风险驱动，以体系结构为核心，迭代及增量为特征的软件过程框架，一般由 UML 方法和工具支持。")]),v._v(" "),l("li",[v._v("统一过程有 6 个核心过程工作流，即业务建模、需求、分析与设计、实现、测试和部署")]),v._v(" "),l("li",[v._v("统一过程有 4 个阶段，分别是初始阶段、细化阶段、构造阶段和移交阶段")])])]),v._v(" "),l("li",[v._v("请简要介绍黑盒测试的主要内容和主要方法\n"),l("ul",[l("li",[v._v("黑盒测试是把测试对象看做一个黑盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能说明。")]),v._v(" "),l("li",[v._v("主要方法：等价类划分和边界值分析。等价类划分设计测试用例时要经过划分等价类和选取测试用例两步。等价类是指某个输入域的子集合，在该子集合中，各个输入数据对于揭露程序中的错误都是等价的；边界值分析方法是对等价类划分方法的补充。边界是指对相对于输入等价类和输出等价类而言，稍高于边界值及稍低于边界值的一些特定情况。")])])]),v._v(" "),l("li",[v._v("请简要介绍软件能力成熟度模型的内容\n"),l("ul",[l("li",[v._v("软件能力成熟度模型是一个参考模型，涵盖了开发产品与服务的活动，它所包含的实践覆盖了项目管理，过程管理、系统工程、软件工程以及其他用于开发与维护的支持过程。CMMI 对于软件检查过程的改进提供了两种不同的路径，即连续式表示和分级式表示。其中分级式表示的成熟度等级共有 5 个，连续式表示的能力等级共有 4 个。过程与是 CMMI 为试试过程改进的组织提供的若干个特别重要同时也是十分关键的软件过程。CMMI 把每个过程域中的内容都分割成模型部件，即必须部件，期望部件，资料性部件。")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);