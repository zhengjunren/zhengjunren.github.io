(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{347:function(t,v,r){"use strict";r.r(v);var _=r(24),a=Object(_.a)({},function(){var t=this,v=t.$createElement,r=t._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"运输层-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运输层-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 运输层-2")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#目录"}},[t._v("目录")])]),r("li",[r("a",{attrs:{href:"#tcp-报文段的首部格式"}},[t._v("TCP 报文段的首部格式")])]),r("li",[r("a",{attrs:{href:"#tcp-可靠传输的实现"}},[t._v("TCP 可靠传输的实现")]),r("ul",[r("li",[r("a",{attrs:{href:"#以字节为单位的滑动窗口"}},[t._v("以字节为单位的滑动窗口")])])])]),r("li",[r("a",{attrs:{href:"#tcp-的流量控制"}},[t._v("TCP 的流量控制")])]),r("li",[r("a",{attrs:{href:"#tcp-的拥塞控制"}},[t._v("TCP 的拥塞控制")])]),r("li",[r("a",{attrs:{href:"#tcp-的运输连接管理"}},[t._v("TCP 的运输连接管理")])])])]),r("p"),t._v(" "),r("h2",{attrs:{id:"tcp-报文段的首部格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-报文段的首部格式","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 报文段的首部格式")]),t._v(" "),r("p",[t._v("TCP 虽然是面向字节流的，但 TCP 传送的数据单元确实报文段。一个 TCP 报文段分为首部和数据两部分，而 TCP 的全部功能都体现在它首部中各字段的作用。因此只有弄清 TCP 首部各字段的作用才能掌握 TCP 的工作原理。")]),t._v(" "),r("p",[t._v("TCP 报文段首部的前 20 个字节是固定的，后面有 4n 字节是根据需要而增加的选项 (n 是整数)。因此 TCP 首部的最小长度是 20 字节。\n"),r("img",{attrs:{src:"/internet/5-20.png",alt:"TCP报文段的首部格式",title:"TCP报文段的首部格式"}})]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("源端口和目的端口字段")]),t._v("——各占 2 字节。端口是运输层与应用层的服务接口。运输层的复用和分用功能都要通过端口才能实现")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("序号字段")]),t._v("——占 4 字节。TCP 连接中传送的数据流中的每一个字节都编上一个序号。序号字段的值则指的是本报文段所发送的数据的第一个字节的序号。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("确认号字段")]),t._v("——占 4 字节，是期望收到对方的下一个报文段的数据的第一个字节的序号。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("数据偏移（即首部长度）")]),t._v("——占 4 位，它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的单位是 32 位字（以 4 字节为计算单位）。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("保留字段")]),t._v("——占 6 位，保留为今后使用，但目前应置为 0。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("紧急 URG")]),t._v(" —— 当 URG = 1 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送(相当于高优先级的数据)。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("确认 ACK")]),t._v(" —— 只有当 ACK =1 时确认号字段才有效。当 ACK =0 时，确认号无效。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("推送 PSH (PuSH)")]),t._v(" —— 接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("复位 RST (ReSeT)")]),t._v(" —— 当 RST=1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("同步 SYN")]),t._v(" —— 同步 SYN = 1 表示这是一个连接请求或连接接受报文。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("终止 FIN (FINish)")]),t._v(" —— 用来释放一个连接。FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("窗口字段")]),t._v(" —— 占 2 字节，用来让对方设置发送窗口的依据，单位为字节。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("检验和")]),t._v(" —— 占 2 字节。检验和字段检验的范围包括首部和数据这两部分。在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("紧急指针字段")]),t._v(" —— 占 16 位，指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("选项字段")]),t._v(" —— 长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节。”选项字段 —— 长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节。”")]),t._v(" "),r("ul",[r("li",[t._v("窗口扩大选项 ——占 3 字节，其中有一个字节表示移位值 S。新的窗口值等于 TCP 首部中的窗口位数增大到 (16 + S)，相当于把窗口值向左移动 S 位后获得实际的窗口大小。")]),t._v(" "),r("li",[t._v("时间戳选项——占 10 字节，其中最主要的字段时间戳值字段（4 字节）和时间戳回送回答字段（4 字节）。")]),t._v(" "),r("li",[t._v("选择确认选项——在后面的 5.6.3 节介绍。")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("填充字段")]),t._v(" —— 这是为了使整个首部长度是 4 字节的整数倍。")])])]),t._v(" "),r("h2",{attrs:{id:"tcp-可靠传输的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-可靠传输的实现","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 可靠传输的实现")]),t._v(" "),r("h3",{attrs:{id:"以字节为单位的滑动窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#以字节为单位的滑动窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 以字节为单位的滑动窗口")]),t._v(" "),r("ul",[r("li",[t._v("TCP 使用流水线传输和滑动窗口协议实现高效、可靠的传输。")]),t._v(" "),r("li",[t._v("TCP 的滑动窗口是以字节为单位的。")]),t._v(" "),r("li",[t._v("发送方 A 和接收方 B 分别维持一个发送窗口和一个接收窗口。")]),t._v(" "),r("li",[t._v("发送窗口表示：在没有收到确认的情况下，可以连续把窗口内的数据全部发送出去。")]),t._v(" "),r("li",[t._v("接收窗口表示：只允许接收落入窗口内的数据。")])]),t._v(" "),r("h2",{attrs:{id:"tcp-的流量控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的流量控制","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 的流量控制")]),t._v(" "),r("h2",{attrs:{id:"tcp-的拥塞控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的拥塞控制","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 的拥塞控制")]),t._v(" "),r("h2",{attrs:{id:"tcp-的运输连接管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的运输连接管理","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 的运输连接管理")])])},[],!1,null,null,null);v.default=a.exports}}]);