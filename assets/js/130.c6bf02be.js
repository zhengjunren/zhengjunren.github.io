(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{703:function(t,r,e){"use strict";e.r(r);var v=e(7),_=Object(v.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),e("p",[t._v("字符串常量，字符串长度不可变。Java 中 "),e("code",[t._v("String")]),t._v(" 是不可变的，用于存放字符的数组被声明为final的，因此只能赋值一次，不可再更改。")]),t._v(" "),e("h2",{attrs:{id:"stringbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder"}},[t._v("#")]),t._v(" StringBuilder")]),t._v(" "),e("p",[t._v("字符串变量（非线程安全）。在内部，"),e("code",[t._v("StringBuilder")]),t._v("对象被当作是一个包含字符序列的变长数组。")]),t._v(" "),e("h2",{attrs:{id:"stringbuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer"}},[t._v("#")]),t._v(" StringBuffer")]),t._v(" "),e("p",[t._v("字符串变量（Synchronized，即线程安全）。如果要频繁对字符串内容进行修改，出于效率考虑最好使用"),e("code",[t._v("StringBuffer")]),t._v("，如果想转成"),e("code",[t._v("String")]),t._v("类型，可以调用"),e("code",[t._v("StringBuffer")]),t._v("的"),e("code",[t._v("toString()")]),t._v("方法。")]),t._v(" "),e("h2",{attrs:{id:"区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),e("p",[e("code",[t._v("String")]),t._v(" 类型和 "),e("code",[t._v("StringBuffer")]),t._v(" 的主要性能区别："),e("code",[t._v("String")]),t._v(" 是不可变的对象, 因此在每次对 "),e("code",[t._v("String")]),t._v(" 类型进行改变的时候，都会生成一个新的 "),e("code",[t._v("String")]),t._v(" 对象，然后将指针指向新的 "),e("code",[t._v("String")]),t._v(" 对象，所以经常改变内容的字符串最好不要用 "),e("code",[t._v("String")]),t._v(" ，因为每次生成对象都会对系统性能产生影响，特别当内存中无引用对象多了以后， JVM 的 GC 就会开始工作，性能就会降低。")])])}),[],!1,null,null,null);r.default=_.exports}}]);