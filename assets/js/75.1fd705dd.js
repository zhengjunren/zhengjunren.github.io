(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{349:function(a,i,l){"use strict";l.r(i);var e=l(24),v=Object(e.a)({},function(){var a=this,i=a.$createElement,l=a._self._c||i;return l("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[l("h1",{attrs:{id:"final、finally和finalize-的区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#final、finally和finalize-的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" final、finally和finalize()的区别")]),a._v(" "),l("h2",{attrs:{id:"final"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#final","aria-hidden":"true"}},[a._v("#")]),a._v(" final")]),a._v(" "),l("ol",[l("li",[l("p",[a._v("当"),l("code",[a._v("final")]),a._v("修饰一个类时，表示这个类不能被继承。注意：")]),a._v(" "),l("ul",[l("li",[a._v("被"),l("code",[a._v("final")]),a._v("修饰的类，"),l("code",[a._v("final")]),a._v("类中的成员变量可以根据自己的实际需要设计为"),l("code",[a._v("final")]),a._v("。")]),a._v(" "),l("li",[l("code",[a._v("final")]),a._v("类中的成员方法都会被隐式的指定为final方法。")])])]),a._v(" "),l("li",[l("p",[a._v("当"),l("code",[a._v("final")]),a._v("修饰方法时，表示这个方法不能被重写。")])]),a._v(" "),l("li",[l("p",[a._v("当"),l("code",[a._v("final")]),a._v("修饰成员变量时，注意：")]),a._v(" "),l("ul",[l("li",[a._v("必须要赋初始化值，而且只能初始化一次。赋值方式：直接赋值、在构造函数中赋值。")]),a._v(" "),l("li",[a._v("当修饰的成员变量是基本数据类型，则表示这个变量值不能改变。")]),a._v(" "),l("li",[a._v("当修饰的成员变量是一个引用类型，则是说这个引用的地址的值不能修改，但是这个引用所指向的对象里面的内容还是可以改变的。")])])])]),a._v(" "),l("h2",{attrs:{id:"finally"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#finally","aria-hidden":"true"}},[a._v("#")]),a._v(" finally")]),a._v(" "),l("p",[l("code",[a._v("finally")]),a._v("关键字用于"),l("code",[a._v("try")]),a._v("后面，"),l("code",[a._v("finally")]),a._v("块中的代码总是执行，不论是否发生异常。一般用于清理工作、关闭链接等类型的语句。")]),a._v(" "),l("h2",{attrs:{id:"finalize"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#finalize","aria-hidden":"true"}},[a._v("#")]),a._v(" finalize")]),a._v(" "),l("p",[a._v("是"),l("code",[a._v("Object")]),a._v("类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等，JVM不保证此方法总被调用。")])])},[],!1,null,null,null);i.default=v.exports}}]);