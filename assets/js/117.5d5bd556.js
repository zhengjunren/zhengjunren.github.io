(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{615:function(a,e,t){"use strict";t.r(e);var r=t(7),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"部署项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署项目"}},[a._v("#")]),a._v(" 部署项目")]),a._v(" "),t("p",[a._v("本项目可以使用 "),t("code",[a._v("tomcat")]),a._v(" 或者 "),t("code",[a._v("nginx")]),a._v(" 部署，在这里分享下常规部署 "),t("code",[a._v("[Nginx]")]),a._v(" 与使用Docker部署的两种方式")]),a._v(" "),t("h2",{attrs:{id:"ssh工具推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh工具推荐"}},[a._v("#")]),a._v(" SSH工具推荐")]),a._v(" "),t("p",[a._v("先分享个好用的 SSH 工具 "),t("a",{attrs:{href:"http://www.hostbuf.com/t/988.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("FinalShell"),t("OutboundLink")],1),a._v("，后面部署会使用到")]),a._v(" "),t("h2",{attrs:{id:"常规部署方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常规部署方式"}},[a._v("#")]),a._v(" 常规部署方式")]),a._v(" "),t("h3",{attrs:{id:"后端部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端部署"}},[a._v("#")]),a._v(" 后端部署")]),a._v(" "),t("h4",{attrs:{id:"修改配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改配置"}},[a._v("#")]),a._v(" 修改配置")]),a._v(" "),t("p",[a._v("按需修改我们的 "),t("code",[a._v("application-prod.yml")]),a._v("，如需打开 Swagger ，那么需要将 "),t("code",[a._v("enabled")]),a._v(" 设置为 true")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("swagger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("h4",{attrs:{id:"打包项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包项目"}},[a._v("#")]),a._v(" 打包项目")]),a._v(" "),t("p",[a._v("我们需要将项目打包好的 Jar 文件上传到服务器，步骤图如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/image.png",alt:"image.png"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/image578bed89803bdfa9.png",alt:"image578bed89803bdfa9.png"}})]),a._v(" "),t("h4",{attrs:{id:"编写脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写脚本"}},[a._v("#")]),a._v(" 编写脚本")]),a._v(" "),t("p",[a._v("编写脚步用于操作 "),t("code",[a._v("java")]),a._v(" 服务")]),a._v(" "),t("p",[a._v("(1) "),t("strong",[a._v("启动脚本")]),a._v(" "),t("code",[a._v("start.sh")]),t("br")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("nohup java -jar eladmin-system-2.6.jar --spring.profiles.active=prod > nohup.out 2>&1 &\n")])])]),t("p",[a._v("(2) "),t("strong",[a._v("停止脚本")]),a._v(" "),t("code",[a._v("stop.sh")]),a._v(" "),t("br")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("PID=$(ps -ef | grep eladmin-system-2.6.jar | grep -v grep | awk '{ print $2 }')\nif [ -z \"$PID\" ]\nthen\necho Application is already stopped\nelse\necho kill -9 $PID\nkill -9 $PID\nfi\n")])])]),t("p",[a._v("(3) "),t("strong",[a._v("查看日志脚本")]),a._v(" "),t("code",[a._v("log.sh")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tail -f nohup.out\n")])])]),t("p",[a._v("脚本创建完成后就可以操作 "),t("code",[a._v("java")]),a._v(" 服务了")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 启动java\n./start.sh\n# 停止java服务\n./stop.sh\n# 查看日志\n./log.sh\n")])])]),t("h4",{attrs:{id:"配置-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx"}},[a._v("#")]),a._v(" 配置 nginx")]),a._v(" "),t("p",[a._v("我们可以使用 "),t("code",[a._v("nginx")]),a._v(" 代理 "),t("code",[a._v("java")]),a._v("服务，添加配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('server {\n    listen 80;\n    server_name 域名/当前服务器外网IP;\n    location / {\n        proxy_pass http://127.0.0.1:8000; #这里的端口记得改成项目对应的哦\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n        }\n    }\n')])])]),t("h3",{attrs:{id:"前端部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端部署"}},[a._v("#")]),a._v(" 前端部署")]),a._v(" "),t("p",[a._v("这里提供两个配置方式 [History、Hash] 的部署方式，首先修改接口地址，如果是 IP 地址，那么需要修改为外网 IP")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/06/25/20200605162316.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"history-模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#history-模式"}},[a._v("#")]),a._v(" History 模式")]),a._v(" "),t("p",[a._v("项目默认是 History 模式，不需要做任何修改")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/image4285f15c9c2dfa96.png",alt:"image4285f15c9c2dfa96.png"}})]),a._v(" "),t("h4",{attrs:{id:"hash-模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式"}},[a._v("#")]),a._v(" Hash 模式")]),a._v(" "),t("h5",{attrs:{id:"_1、修改-routers-js-取消-hash-的注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、修改-routers-js-取消-hash-的注释"}},[a._v("#")]),a._v(" 1、修改 routers.js，取消 hash 的注释")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/image92197994858c5edd.png",alt:"image92197994858c5edd.png"}})]),a._v(" "),t("h5",{attrs:{id:"_2、修改根目录-vue-config-js-配置-取消-15-行的注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、修改根目录-vue-config-js-配置-取消-15-行的注释"}},[a._v("#")]),a._v(" 2、修改根目录 vue.config.js 配置，取消 15 行的注释")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/imagee7ae12491c445923.png",alt:"imagee7ae12491c445923.png"}})]),a._v(" "),t("h4",{attrs:{id:"打包项目-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包项目-2"}},[a._v("#")]),a._v(" 打包项目")]),a._v(" "),t("p",[a._v("不管是将项目部署到 "),t("code",[a._v("nginx")]),a._v(" 还是其他服务器，都需要先将项目打包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm run build:prod\n")])])]),t("p",[a._v("打包完成后会在根目录生成 "),t("code",[a._v("dist")]),a._v(" 文件夹，我们需要将他上传到服务器中")]),a._v(" "),t("h4",{attrs:{id:"nginx-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置"}},[a._v("#")]),a._v(" Nginx 配置")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("nginx/conf/nginx.conf")]),a._v("  添加配置")]),a._v(" "),t("h5",{attrs:{id:"history-模式配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#history-模式配置"}},[a._v("#")]),a._v(" History 模式配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("server\n    {\n        listen 80;\n        server_name 域名/外网IP;\n        index index.html;\n        root  /home/wwwroot/eladmin/dist;  #dist上传的路径\n        # 避免访问出现 404 错误\n        location / {\n          try_files $uri $uri/ @router;\n          index  index.html;\n        }\n        location @router {\n          rewrite ^.*$ /index.html last;\n        }  \n    } \n")])])]),t("h5",{attrs:{id:"hash-模式配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式配置"}},[a._v("#")]),a._v(" Hash 模式配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("server {\n\t   listen       80;\n\t   server_name  域名/外网IP;\n\n\t   location / {\n\t      root   /home/wwwroot/eladmin/dist; #dist上传的路径\n\t      index  index.html;\n\t   }\n}\n")])])]),t("h4",{attrs:{id:"二级目录部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二级目录部署"}},[a._v("#")]),a._v(" 二级目录部署")]),a._v(" "),t("h5",{attrs:{id:"nginx-配置-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置-2"}},[a._v("#")]),a._v(" Nginx 配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("server {\n\t   listen       80;\n\t   server_name  域名/外网IP;\n\n\t   location /dist {\n\t      root   /home/wwwroot/eladmin/test;\n\t      index  index.html;\n\t   }\n}\n")])])]),t("p",[a._v("文件目录\n"),t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/06/25/CIyQda.png",alt:"image"}})]),a._v(" "),t("p",[a._v("注意目录名称要与配置名称一致")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/06/25/PP6D6b.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"重启nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重启nginx"}},[a._v("#")]),a._v(" 重启Nginx")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("systemctl restart nginx\n")])])]),t("p",[a._v("重启 "),t("code",[a._v("nginx")]),a._v(" 后，访问你的域名或者IP地址即可")]),a._v(" "),t("h2",{attrs:{id:"容器部署方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器部署方式"}},[a._v("#")]),a._v(" 容器部署方式")]),a._v(" "),t("p",[a._v("对于熟悉 Docker 的开发者来说，使用 Docker 部署管理更加的简单高效")]),a._v(" "),t("p",[a._v("我一般习惯将 home 目录作为工作目录，因此 Docker 挂载的文件也都会存放在 home 目录中")]),a._v(" "),t("h3",{attrs:{id:"安装docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[a._v("#")]),a._v(" 安装Docker")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun && systemctl start docker && systemctl enable docker\n")])])]),t("p",[a._v("如果你机器是国内的机器，那么需要配置镜像加速，一般使用阿里云镜像加速 "),t("a",{attrs:{href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"}},[a._v("阿里云加速官网"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/imageb817a495226b07de.png",alt:"imageb817a495226b07de.png"}})]),a._v(" "),t("h3",{attrs:{id:"安装mysql与redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql与redis"}},[a._v("#")]),a._v(" 安装Mysql与Redis")]),a._v(" "),t("p",[a._v("这里使用的是 mariadb 镜像，并且将 mariadb 数据库文件挂载到宿主机的 "),t("code",[a._v("/home/mysql/")]),a._v(" 目录下")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -v /home/mysql/:/var/lib/mysql \\\n-p 3306:3306 -e MYSQL_ROOT_PASSWORD=dqjdda1996 \\\n--privileged=true --restart=always --name mariadb -d mariadb\n")])])]),t("p",[a._v("安装Redis")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -itd --name redis --restart=always -p 6379:6379 redis\n")])])]),t("h3",{attrs:{id:"构建与启动java容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建与启动java容器"}},[a._v("#")]),a._v(" 构建与启动Java容器")]),a._v(" "),t("h4",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[a._v("#")]),a._v(" 构建镜像")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[a._v("Docker 部署使用到了环境变量参数，对于非 "),t("code",[a._v("V2.6")]),a._v(" 版本的，需要修改 application.yml、application-prod.yml 等配置")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://gitee.com/elunez/eladmin/pulls/17/files",target:"_blank",rel:"noopener noreferrer"}},[a._v("具体参考"),t("OutboundLink")],1)])]),t("p",[a._v("修改完成后，打包项目将打包好地Jar上传到服务器的 "),t("code",[a._v("/home/eladmin")]),a._v(" 目录，在该目录创建 Dockerfile 文件，并编写 Dockerfile")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('FROM java:8\nARG JAR_FILE=./*.jar\nCOPY ${JAR_FILE} app.jar\nENV TZ=Asia/Shanghai\nENTRYPOINT ["java","-jar","/app.jar"]\n')])])]),t("p",[a._v("构建镜像")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker build -t eladmin .\n")])])]),t("h4",{attrs:{id:"启动java容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动java容器"}},[a._v("#")]),a._v(" 启动Java容器")]),a._v(" "),t("p",[a._v("将容器中的 "),t("code",[a._v("/home/eladmin/")]),a._v(" 挂载到宿主机的 "),t("code",[a._v("/home/data/")]),a._v(" 目录并且设置数据库地址与密码等环境变量参数")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('docker run -d \\\n--name eladmin --restart always \\\n-p 8000:8000 \\\n-e "TZ=Asia/Shanghai" \\\n-e DB_HOST=172.17.0.1 \\\n-e DB_PWD=mysql_pwd \\\n-e REDIS_HOST=172.17.0.1 \\\n-v /home/data/:/home/eladmin/ \\\neladmin\n')])])]),t("h3",{attrs:{id:"安装与配置nginx容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装与配置nginx容器"}},[a._v("#")]),a._v(" 安装与配置Nginx容器")]),a._v(" "),t("h4",{attrs:{id:"安装nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装nginx"}},[a._v("#")]),a._v(" 安装Nginx")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("ul",[t("li",[a._v("/home/nginx/conf.d 用于存放配置文件")]),a._v(" "),t("li",[a._v("/home/nginx/cert 用于存放 https 证书")]),a._v(" "),t("li",[a._v("/home/nginx/html 用于存放网页文件")]),a._v(" "),t("li",[a._v("/home/nginx/logs 用于存放日志")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('docker run -d \\\n--name nginx --restart always \\\n-p 80:80 -p 443:443 \\\n-e "TZ=Asia/Shanghai" \\\n-v /home/nginx/nginx.conf:/etc/nginx/nginx.conf \\\n-v /home/nginx/conf.d:/etc/nginx/conf.d \\\n-v /home/nginx/logs:/var/log/nginx \\\n-v /home/nginx/cert:/etc/nginx/cert \\\n-v /home/nginx/html:/usr/share/nginx/html \\\nnginx:alpine\n')])])]),t("h4",{attrs:{id:"配置nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置nginx"}},[a._v("#")]),a._v(" 配置Nginx")]),a._v(" "),t("p",[a._v("这里使用 Nginx 反向代理访问后端服务，由于容器内部通信，因此需要使用容器的 IP，也就是 172.17.0.1")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("/home/nginx/conf.d")]),a._v(" 创建一个 eladmin.conf 的配置文件，文件内容如下")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('server\n    {\n        listen 80;\n        server_name 域名/外网IP;\n        index index.html;\n        root  /usr/share/nginx/html/eladmin/dist;  #dist上传的路径\n\n        # 避免访问出现 404 错误\n        location / {\n          try_files $uri $uri/ @router;\n          index  index.html;\n        }\n\n        location @router {\n          rewrite ^.*$ /index.html last;\n        }\n\n        # 接口\n        location /api {\n          proxy_pass http://172.17.0.1:8000;\n          proxy_set_header X-Forwarded-Proto $scheme;\n          proxy_set_header X-Forwarded-Port $server_port;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Upgrade $http_upgrade;\n          proxy_set_header Connection "upgrade";\n        }\n\n        # 授权接口\n        location /auth {\n          proxy_pass http://172.17.0.1:8000;\n          proxy_set_header X-Forwarded-Proto $scheme;\n          proxy_set_header X-Forwarded-Port $server_port;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Upgrade $http_upgrade;\n          proxy_set_header Connection "upgrade";\n        }\n\n        # WebSocket 服务\n        location /webSocket {\n          proxy_pass http://172.17.0.1:8000;\n          proxy_set_header X-Forwarded-Proto $scheme;\n          proxy_set_header X-Forwarded-Port $server_port;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_set_header Upgrade $http_upgrade;\n          proxy_set_header Connection "upgrade";\n        }\n\n        # 头像\n        location /avatar {\n          proxy_pass http://172.17.0.1:8000;\n        }\n\n        # 文件\n        location /file {\n          proxy_pass http://172.17.0.1:8000;\n        }\n    }\n')])])]),t("p",[a._v("注意：容器中 "),t("code",[a._v("/usr/share/nginx/html/eladmin/dist")]),a._v(" 对应宿主机的 "),t("code",[a._v("/home/nginx/html/eladmin/dist")]),a._v(" 目录，因此文件上传到宿主机的目录即可")]),a._v(" "),t("h3",{attrs:{id:"打包上传前端代码【重要】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包上传前端代码【重要】"}},[a._v("#")]),a._v(" 打包上传前端代码【重要】")]),a._v(" "),t("p",[a._v("由于Nginx使用的是反向代理后端接口，因此 非 V2.6 版本需要做如下修改")]),a._v(" "),t("p",[a._v("1、将 "),t("code",[a._v(".env.production")]),a._v(" 中的接口地址改为 "),t("code",[a._v("'/'")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/imageb0806c848d01318e.png",alt:"imageb0806c848d01318e.png"}})]),a._v(" "),t("p",[a._v("2、修改 "),t("code",[a._v("api.js")]),a._v(" 中的 "),t("code",[a._v("baseUrl = process.env.VUE_APP_BASE_API === '/' ? '' : process.env.VUE_APP_BASE_API")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.el-admin.xin/images/2020/09/17/imagedcd151a815c62932.png",alt:"imagedcd151a815c62932.png"}})]),a._v(" "),t("p",[a._v("3、打包项目并且上传到 "),t("code",[a._v("/home/nginx/html/eladmin")]),a._v(" 目录下")]),a._v(" "),t("p",[a._v("4、重启 Nginx 容器 "),t("code",[a._v("docker restart nginx")])])])}),[],!1,null,null,null);e.default=s.exports}}]);